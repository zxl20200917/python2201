01 文件操作流程
    1.1 什么是IO
        IO在计算机中指INPUT/OUTPUT，也就是输入和输出，由于程序和运行时数据是在内存中驻留，由CPU这个超快的计算核心来执行
        ，涉及到数据交换的地方，通常是磁盘、网络等，就需要IO接口。
        1.1.1 IO密集和计算密集
            在一个程序中依据IO发生情形的多少可以分为两个IO密集形程序或者计算密集型程序(也叫密集型程序)
            1.1.1.1 IO密集型程序:在程序执行中有大量IO操作，而CPU运算较少，消耗CPU较少，耗时长。
            1.1.1.2 计算密集型程序:程序运行中计算较多，IO操作相对较少，CPU消耗多，执行速度快，几乎没有阻塞。
    1.2 文件分类
        文件是保存在持久化存储设备(硬盘、U盘、光盘)上一个段数据，从格式编码角度分为文本文件(打开后自动解码为字符),
        二进制文件(视频、音频等).在python里把文件视作一种类型的对象，类似之前学习过的其他数据类型
        1.2.1 字节串
            在python3中引入了字节串的概念，与str不同，字节串以字节序列值表达数据，更方便用来处理二进制数据。因此在
            python3中字节串是常见的二进制数据展现方式。
            1.2.1.1 普通的ASCII编码字符串可以在前面加b转换为字节串
                b"hello"
            1.2.1.2 字节串与字符串的转换方式
                1.2.1.2.1 字符串转换为字节串方法：
                    str.encode()
                1.2.1.2.2 字节串转换为字符串方法：
                    bytes.decode()
    1.3 文件操作
        1.3.1 打开文件
            对文件实现读写的操作基本操作步骤为：
                打开文件
                读写文件
                关闭文件
            file_object = open(file_name,access_mode='r|w',buffering=-1)
            功能: 打开一个文件，返回一个文件对象
            参数:
                file_name文件名
                access_mode 打开文件的方式，如果不写默认为'r'
                buffering:
                    1 表示有行缓冲，默认则表示使用系统默认提供的缓冲机制。
            返回值: 成功返回文件操作对象

            18:32







02 文件读写操作
03 文件处理细节
04 网络基础概念
05 TCP和UDP
06 TCP套接字编程